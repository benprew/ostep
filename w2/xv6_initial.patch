diff --git a/Makefile b/Makefile
index 09d790c..506f19d 100644
--- a/Makefile
+++ b/Makefile
@@ -76,7 +76,7 @@ AS = $(TOOLPREFIX)gas
 LD = $(TOOLPREFIX)ld
 OBJCOPY = $(TOOLPREFIX)objcopy
 OBJDUMP = $(TOOLPREFIX)objdump
-CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer
+CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -Wno-stringop-overflow
 CFLAGS += $(shell $(CC) -fno-stack-protector -E -x c /dev/null >/dev/null 2>&1 && echo -fno-stack-protector)
 ASFLAGS = -m32 -gdwarf-2 -Wa,-divide
 # FreeBSD ld wants ``elf_i386_fbsd''
diff --git a/defs.h b/defs.h
index 82fb982..98e3f9f 100644
--- a/defs.h
+++ b/defs.h
@@ -186,5 +186,8 @@ void            switchkvm(void);
 int             copyout(pde_t*, uint, void*, uint);
 void            clearpteu(pde_t *pgdir, char *uva);
 
+// sysfile.c
+void            sysfileinit(void);
+
 // number of elements in fixed-size array
 #define NELEM(x) (sizeof(x)/sizeof((x)[0]))
diff --git a/main.c b/main.c
index 9924e64..831674e 100644
--- a/main.c
+++ b/main.c
@@ -28,6 +28,7 @@ main(void)
   uartinit();      // serial port
   pinit();         // process table
   tvinit();        // trap vectors
+  sysfileinit();   // sysfile init
   binit();         // buffer cache
   fileinit();      // file table
   ideinit();       // disk
@@ -113,4 +114,3 @@ pde_t entrypgdir[NPDENTRIES] = {
 // Blank page.
 //PAGEBREAK!
 // Blank page.
-
diff --git a/syscall.c b/syscall.c
index ee85261..f9ea7f3 100644
--- a/syscall.c
+++ b/syscall.c
@@ -103,6 +103,7 @@ extern int sys_unlink(void);
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
+extern int sys_getreadcount(void);
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -126,6 +127,7 @@ static int (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_getreadcount] sys_getreadcount,
 };
 
 void
diff --git a/syscall.h b/syscall.h
index bc5f356..c5ebb23 100644
--- a/syscall.h
+++ b/syscall.h
@@ -20,3 +20,4 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_getreadcount 22
diff --git a/sysfile.c b/sysfile.c
index bfe61b7..6c7af94 100644
--- a/sysfile.c
+++ b/sysfile.c
@@ -16,6 +16,12 @@
 #include "file.h"
 #include "fcntl.h"
 
+struct spinlock readcountlock;
+int readcount = 0;
+
+void sysfileinit(void) {
+  initlock(&readcountlock, "readcount");
+}
 // Fetch the nth word-sized system call argument as a file descriptor
 // and return both the descriptor and the corresponding struct file.
 static int
@@ -66,6 +72,7 @@ sys_dup(void)
   return fd;
 }
 
+
 int
 sys_read(void)
 {
@@ -73,11 +80,21 @@ sys_read(void)
   int n;
   char *p;
 
+  acquire(&readcountlock);
+  readcount += 1;
+  release(&readcountlock);
+
   if(argfd(0, 0, &f) < 0 || argint(2, &n) < 0 || argptr(1, &p, n) < 0)
     return -1;
   return fileread(f, p, n);
 }
 
+int sys_getreadcount(void)
+{
+  return readcount;
+}
+
+
 int
 sys_write(void)
 {
diff --git a/user.h b/user.h
index 4f99c52..7886468 100644
--- a/user.h
+++ b/user.h
@@ -23,6 +23,7 @@ int getpid(void);
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int getreadcount(void);
 
 // ulib.c
 int stat(const char*, struct stat*);
diff --git a/usys.S b/usys.S
index 8bfd8a1..7af84de 100644
--- a/usys.S
+++ b/usys.S
@@ -29,3 +29,4 @@ SYSCALL(getpid)
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(getreadcount)
